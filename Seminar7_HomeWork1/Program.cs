// Задайте двумерный массив размером m×n, заполненный случайными вещественными числами. 
// m = 3, n = 4.

// 0,5 7 -2 -0,2

// 1 -3,3 8 -9,9

// 8 7,8 -7,1 9


Main();

void Main()
{
    int m = 3;
    int n = 4;
    double[,] arr = GenerateRandomArray(m, n);
    PrintArray(arr);
    
}
double[,] GenerateRandomArray(int m, int n)
{
    double[,] arr = new double[m, n]; // создаем двумерный массив размером m x n
    Random rand = new Random(); // создаем генератор случайных чисел
    for (int i = 0; i < m; i++) // заполняем массив случайными вещественными числами
    {
        for (int j = 0; j < n; j++)
        {
            arr[i, j] = rand.NextDouble() * 20-10; // генерируем случайное вещественное число от -10 до 10
        }
    }
    return arr;
}
void PrintArray(double[,] arr)
{
    int m = arr.GetLength(0); // получаем количество строк массива || `arr.GetLength(0 или 1)` - это метод, который возвращает размерность массива `arr` по указанному индексу. 

    int n = arr.GetLength(1); // получаем количество столбцов массива
    for (int i = 0; i < m; i++)//Повторяет по индексу количества строк
    {
        for (int j = 0; j < n; j++) //Повторяет по индексу количества столбцов
        {
            Console.Write(arr[i, j].ToString("F1") + " ");// выводим элемент массива с одним знаком после запятой 
        }
        Console.WriteLine();
    }
}
// }`ToString("F1")` является встроенным методом в C#, который преобразует числовое значение в строку и округляет число до указанного числа знаков после запятой. 
// В данном случае `"F1"` означает округление числа до одного знака после запятой. 
// 
// double num1 = 3.14159;
// string str1 = num1.ToString("F1"); // преобразует число 3.14159 в строку "3.1"

// double num2 = 4.99999;
// string str2 = num2.ToString("F1"); // преобразует число 4.99999 в строку "5.0"
// Обратите внимание, что при использовании `ToString("F1")` числа могут быть округлены до указанного количества знаков после запятой, что может ввести в заблуждение, если точность числа важна.